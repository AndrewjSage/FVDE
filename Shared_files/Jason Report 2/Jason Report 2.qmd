---
title: "FVDE Progress Report 2"
author: vub23 & mina-cheese
format: pdf
---

```{r setup, include=F}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, fig.height = 10)
options(scipen = 5)
library(tidyverse)
library(stargazer)
library(corrplot)
library(patchwork)
library(tigris)
library(sf)
library(factoextra)
library(kableExtra)
```

This project will contain the progress we have made over the last week and a half. Per Prof. Sage's advice, we have chosen to go with a new scoring paradigm that ranks census tracts from 0 to 100 in comparison to national standards, instead of relying on z-scores. We will also look at the outliers of each vital index.

\newpage

# Humane Housing

For this report, I've chosen 5 variables that are the closest proxies to more humane housing outcomes and created my own scoring system that ranges from 0 to 100. Most of my rationale are included below. Additionally, differences in variable distributions and scores moving from Zipcodes to Census Tracts divisions will be mentioned.

## Census Tracts Dataset:

```{r}
# Read csv file
hh <- read.csv("hh tracts 2.csv")
hh <- hh %>% select(-Layer, -Name)

# Copying Mina's code for the string pruning process
names(hh) <- sub("_.*$", "", names(hh))

# Creating other dataframes that fit the requirements
hhCorr <- hh %>% select(-HCP) %>% na.omit()
hhSumm <- hh %>% select(-GEOID)
```

### Correlation plots and Histograms:

Below is the correlation plot for numeric variables:

```{r corrplot, fig.width=10, fig.height=10}
A = cor(hhCorr)
corrplot(A, method='color', order = 'AOE', type='upper', addCoef.col = 'black')
```

We can notice the decrease in the number of strong correlations in comparison to the zipcodes dataset. Most variable-pairs now exhibit only some to no correlation at all. Notable correlations that weren't noted in the first report are noted below:

-   `EJV`, the vulnerable demographics index, is negatively correlated with home ownership rates `HUO` and median income `INC`, which is understandable: with higher income, people can afford to buy instead of rent, raising `HUO`, and will not be as vulnerable, resulting in a lower demographic vulnerability index.

-   `FAI`, the metric for food insecurity, shows the same negative correlations with income and home ownership, which is similarly explained.

-   Median household income is also positively correlated with housing cost variables `MHC`, `RNT`, which is expected: the more you earn, the better your housing situation will likely be.

-   Food insecurity and demographic vulnerability also show a strong positive correlation.

```{r}
vars <- names(hhSumm)
hhbins <- function(x) {
  diff(range(x, na.rm = TRUE)) / (2 * IQR(x, na.rm = TRUE) / length(x)^(1/3))
} #using the Freedman-Diaconis rule to compute the binwidth

hhplots <- map(vars, ~{
  varname <- .x
  binwidth <- round(hhbins(hhSumm[[varname]]))
  
  ggplot(data=hhSumm, aes_string(x=varname)) + 
    geom_histogram(fill="#2196f3", color="#000000", bins=binwidth) + 
    labs(title=varname, x=NULL, y="Count")
})

wrap_plots(hhplots, ncol = 4, nrow = 5) & plot_annotation(caption="*Note: histogram binwidth was decided using the Freedman-Diaconis rule.")
```

The histograms show that even with changing the geographic divisions, most variables show the same trends and distributions. Most variables have a right-tailed distribution, save for `HUO` and `APR`, which are housing ownership rates and mortgage approval rates.

### Summary Statistics:

The table for summary statistics are shown below:

```{r, results='asis'}
stargazer(hhSumm, title="Summary Stats", type = 'latex', summary.stat = c("n","mean","sd", "min", "p25", "median", "p75", "max"), font.size = "small", notes.append=F, header=F)
```

## New Index Creation:

### Variable Selection Process:

Per our discussions last time, our index would contain variables that encompasses affordability, safety, stability, diversity and accessibility. In the time constraint given, I have selected 5 variables that cover most of our bases, which are:

## New Index Analysis:

\newpage

# Lifelong Learning

We look into lifelong learning for the census tract subdivision.

```{r}
#file orwhatever
# getting the data into readable format
colnames <- names(read.csv("Lifelong-Learning-Cencus-Tracts.csv",nrows=0))

# data wrangling blah blah blah
balls <- read.csv("Lifelong-Learning-Cencus-Tracts.csv", skip=2, header=FALSE)
names(balls) <- colnames
balls <- balls |> select(-Layer) # removing redundant columns
names(balls)[4:8] <- c("EDA", "EDB", "EDC", "EDE", "EDG") # get rid of the stupid date things since they're all the same (see below)

# data for the prelim analysis
ballsAnal <- balls |> select(-GEOID, -Name)
```

## Legend

Similar to the zip code level, the census tract variable names do not provide much insight into what they are representing. Thus, I will describe them here. Please note that all of this data was collected from 2019-2023.

-   `EDA`: 9th grade education rate (% of residents)
-   `EDB`: High school graduation rate (% of residents)
-   `EDC`: Any higher education rate (% of residents)
-   `EDE`: College graduation rate (% of residents)
-   `EDG`: Preschool enrollment rate (% of toddlers ages 3-4)

Good news! There are basically no `NA` entries in this dataset at all, so we do not need to worry about that!! The one `NA` entry is in the preschool enrollment rate `EDG` in census tract 7. Also worth noting that there are a lot of 0 entries in that column. Not sure why that is.

## Exploratory Plots and Variables

### Correlation Plots

```{r}
# there is one NA entry in EDG. Thus, we must remove it.
ballsCorr <- ballsAnal |> na.omit()

plt = cor(ballsCorr)
corrplot(plt, method='color', order = 'AOE', type='upper', addCoef.col = 'black')
```

There is a notably high correlation between any higher education rate `EDC` and college graduation rate `EDE`. This is understandable, since any higher education includes a college education. There is also a high correlation between 9th grade education rate `EDA` and high school graduation rate `EDB`. Perhaps this is due to the fact that people who start high school (i.e. 9th grade) will end up finishing it.

### Histograms

We can also look at histograms for each of the variables.

```{r, fig.width=8, fig.height=5}
bins_fd <- function(x) {
  diff(range(x, na.rm = TRUE)) / (2 * IQR(x, na.rm = TRUE) / length(x)^(1/3))
} #using the Freedman-Diaconis rule to compute the binwidth

his_plots <- map(vars, ~{
  varname <- .x
  binwidth <- round(bins_fd(balls[[varname]]))
  
  ggplot(data=balls, aes_string(x=varname)) + 
    geom_histogram(fill="#2196f3", color="#000000", bins=binwidth) + 
    labs(title=varname, x=NULL, y="Count")
})

wrap_plots(his_plots, ncol = 3, nrow = 2) & plot_annotation(caption="*Note: histogram binwidth was decided using the Freedman-Diaconis rule.")
```

The histograms look quite similar to the ones from the zip code layer. There is skewedness in the 9th grade education rate `EDA`, which makes sense since many people have been to high school. There is also an outlier in the college graduation rate `EDE`, which belongs to census tract 125.03 in Outgamie, WI; they have a college graduation rate of 76.5%.

### Summary Stats

```{r, results='asis'}
stargazer(ballsAnal, title="Summary Stats", type = 'latex', summary.stat = c("n","mean","sd", "min", "median", "max", "p25", "p75"), font.size = "small", notes.append=F, header=F)
```

## Indexing (NEW)

We can try to do an indexing using an arbitrarily decided scale, so we can get indexes from 1-100...

```{r}
condition <- read.csv("Condition-baseline-llct.csv")

kable(condition)
```

Note that the values for the conditions are decided arbitrarily and the values for each of the variables are guesstimated to the best of my ability by cross referencing multiple online sources. The any higher education rate `EDC` variable is especially guesstimated, as almost all of the information I found online was about high school degree+ or bachelor's degree+.

We can then use these baseline values to create a function that maps the values we have for each variable to their condition score. For simplicity's sake, I'm gonna go with a polygonal approximation (sorry Lagrange). The graphs below illustrate the idea.

```{r, fig.height=3, fig.width=15}
vars_cond <- c("EDA", "EDB", "EDC", "EDE", "EDG")

cond_plots <- map(vars_cond, ~{
  cdvar <- .x
  
  ggplot(data=condition, aes_string(x=cdvar, y='Cond_Value')) +
    geom_line() +
    geom_point() +
    labs(title=paste(cdvar, "Score"), x=paste(cdvar, "Value"), y="Condition Score") + scale_x_continuous(limits = c(0,NA))
})

wrap_plots(cond_plots, ncol=5, nrow=1)
```

```{r}
# Code from ChatGPT.. im sorry i cant code... TT

# For each variable, build interpolation function and apply to balls
for (var in vars_cond) {
  
  # Filter condition data for just this variable (non-NA values only)
  baseline_x <- condition[[var]]
  baseline_y <- condition$Cond_Value
  valid_rows <- !is.na(baseline_x) & !is.na(baseline_y)
  
  # Build interpolation function.. approxfun does piecewise linear interpolating
  interp_fun <- approxfun(x = baseline_x[valid_rows], 
                          y = baseline_y[valid_rows], 
                          rule = 2)  # rule = 2 allows extrapolation using nearest value; we need this because some of the values fall below the terrible part, meaning they have a score of 0 (won't show up as na)
  
  # Apply interpolation to balls
  new_colname <- paste0(var, "_CondScore")
  balls[[new_colname]] <- interp_fun(balls[[var]])
}
```

```{r}
# dataset of just the condition scores + index (averaging everything)
indexes <- balls |> select("Name", "GEOID", ends_with("_CondScore")) |> 
  rowwise() |> mutate(Index = mean(c_across(ends_with("_CondScore")), na.rm = TRUE)) |>
  ungroup() |> arrange(desc(Index))

indexes <- indexes |> rename_with(~ gsub("_CondScore.*", "", .x))
```

After some coding that you cannot see, we can display the top 10 and bottom 10 indexes computed using this methodology. The following tables show these condition scores of each of the variables as well as the index, which is an average of those scores.

```{r}
# Top 10 zscores
kable(head(indexes, 10), caption = "Top 10 indexes (by Census Tract)", digits=3)
```

```{r}
# Bottom 10 zscores
kable(tail(indexes, 10), caption = "Bottom 10 indexes (by Census Tract)", digits=3)
```

## Visualization

We can visualize these indexes on a map so we have an intuitive way to compare them.

```{r, fig.width=10, fig.height=10, fig.cap="Map of the lifelong learning index (z-score) by census tract"}
# Making the map for the index computed by averaging the z-scores

condScores <- indexes |> select(GEOID, Index)

# Getting spatial data from tigris, zcta was found from reading the documentation
zips <- unique(condScores$GEOID)
spatial <- tracts(state="wi", class="sf", year=2023, progress_bar=F)
foxZips <- spatial %>% mutate(GEOID=as.character(GEOID)) %>% filter(GEOID %in% zips)
# Getting other zips from tigris so that we know where we are
background <- spatial %>%
  mutate(GEOID=as.character(GEOID)) %>%
  filter(!GEOID %in% zips)

# joining the data tables together
condScores <- condScores %>% mutate(GEOID=as.character(GEOID)) %>%  left_join(foxZips, by=c("GEOID"="GEOID"))

condScores <- condScores %>% st_as_sf()

# Arbitrary limits decided by ME!!! (so, not arbitrary)
zoom_xlim <- c(-89, -88)
zoom_ylim <- c(43.8, 44.7)

# Drawing up the map
cond_map <- ggplot() +
  geom_sf(data = condScores, aes(fill = Index), color="black") +
  geom_sf(data = background, fill = "grey95", color = "grey80", linewidth = 0.1) +
  scale_fill_viridis_c() + 
  labs(title = "Lifelong Learning Index (by Census Tract)") +
  theme_minimal() + coord_sf(xlim = zoom_xlim, ylim = zoom_ylim, expand = FALSE)

cond_map
```

The highest index belongs to tract 31 in Winnebago, while the lowest index belongs to tract 7, also in Winnebago.

I would also like to point out tract 9400, which is on the Oneida Reservation, meaning they have a high population of Native Americans. Namely, the humane housing is the highest, while the lifelong learning index is the second lowest. While many Native Americans attend middle and high school, their drop out rates are disproportionately high, according to the Bureau of Indian Affairs. Post-secondary education graduation rate is even lower, leading to a very low overall lifelong learning index. Indeed, we can see this in the data--only 51.7% of people here have experience in any higher education `EDC`, any only 16.1% have graduated college `EDE`.
