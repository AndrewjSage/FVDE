---
title: "Lifelong Learning"
author: mina-cheese
format: pdf
---

```{r setup, include=F}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, fig.height = 10)
options(scipen = 7)
library(tidyverse)
library(stargazer)
library(corrplot)
library(patchwork)
library(tigris)
library(sf)
library(factoextra)
```

I guess we are calling these milestone projects? Well in any case I'll be doing what Binh did but for the lifelong learning ballsset. Also looking into PCA a bit but erm 

```{r}
# getting the balls into readable format
colnames <- names(read.csv("Lifelong-Learning-Zip-Codes.csv",nrows=0))

# balls wrangling blah blah blah
balls <- read.csv("Lifelong-Learning-Zip-Codes.csv", skip=2, header=FALSE)
names(balls) <- colnames
balls <- balls |> select(-Layer, -Name) # removing redundant columns

# Wrangled ballsframes for other visualizations
ballsCorr <- balls |> select(-FVDEWVAR_2023.2024, -FVDEYLCV_2024.2025, -GEOID, -Longitude, -Latitude, -Population) |> na.omit()
ballsCorr1 <- balls |> select(-GEOID, -Longitude, -Latitude, -Population) |> na.omit()

ballsSumm <- balls |> select(-GEOID)
```

## Legend

The variable names are terrible so I'll describe them here. I'll give the letters while the corresponding numbers following them are the relevant years.

- `EDA`: 9th grade education rate (%)
- `EDB`: high school graduation rate (%)
- `EDC`: any higher education rate (%)
- `EDE`: college graduation rate (%)
- `EDG`: preschool enrollment for ages 3-4 (%)
- `FWDEWVAR`: public school suspensions K-12
- `FVDEYLCV`: public school enrollment K-12

It is worth noting that there is a significant number of `NA` entries in the last two variables.

## Exploratory Plots and Variables

### Correlation n Shit

Here is the correlation plot with the final two variables omitted. 

```{r}
# Without the last two variables
plt = cor(ballsCorr)
corrplot(plt, method='color', order = 'AOE', type='upper', addCoef.col = 'black')
```

Here is the correlation plot inlcuding the last two variables. Due to the large number of `NA` entries, the number of rows has been shaved down from 52 to 25.

```{r}
# With the last two variables
plt1 = cor(ballsCorr1)
corrplot(plt1, method='color', order = 'AOE', type='upper', addCoef.col = 'black')
```

balls interpretation or something??

### PCA?? omg!!!

```{r}
library("FactoMineR")
res.pca <- PCA(ballsCorr1,ncp=7)

fviz_eig(res.pca, addlabels=TRUE)
```

```{r}
var <- get_pca_var(res.pca)
head(var$cor)
```

```{r}
get_eigenvalue(res.pca)
```


### Histograms

```{r, fig.width=9, fig.height=4}
vars <- c("EDA_2019.2023", "EDB_2019.2023", "EDC_2019.2023" ,"EDE_2019.2023", "EDG.X341_2019.2023", "FVDEWVAR_2023.2024", "FVDEYLCV_2024.2025")

plots <- map(vars, ~ ggplot(data=balls, aes_string(.x)) + #idk wtf .x is ok dont talk to me
  geom_histogram(fill="#2196f3", color="#000000", bins=20) + labs(title= .x, x=NULL, y="Count"))

wrap_plots(plots, ncol = 4, nrow = 2)
```

### Summary statistics

```{r, results='asis'}
stargazer(ballsSumm, title="Summary Stats", type = 'latex', summary.stat = c("n","mean","sd", "min", "median", "max"), notes.append=F, header=F)
```

## Normalization and Z-Score Calculations

I want to start transforming data so I can do the z-score calculations and indexing, but the correlation between the `EDX` variables are quite high, so maybe it doesn't make sense to do them all.

```{r}
#piss in mouth
```

ctrl+alt+i

